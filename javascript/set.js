const arrayA = [1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, 4, 3, 1, 2, 1, 2, 3, ];
const arrayB = [1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5,1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5, 1, 3, 5, 1, 5, 1, 5];

function union(arrayA, arrayB){
    let answer = [];
    return answer = getSet(arrayA.concat(arrayB));
}

function intersection(arrayA, arrayB){
    let answer = [];
    let setA = getSet(arrayA);
    let setB = getSet(arrayB);

    answer = setA.filter(function(item){
        return setB.includes(item);
    });
    return answer;
}

function complements(arrayA, arrayB){
    let answer = [];
    let setA = getSet(arrayA);
    let setB = getSet(arrayB);

    answer = setA.filter(function(item){
        return !setB.includes(item);
    });
    return answer;
}

function getSet(arr){
    let answer = [];    
    answer = arr.filter(function(item, index) {
        return arr.indexOf(item) === index;
    });
    return answer;
}

function init(){
    console.log("setA :", getSet(arrayA));
    console.log("setB :", getSet(arrayB));
    console.log("setA - setB :", complements(arrayA, arrayB));
    console.log("setB - setA :", complements(arrayB, arrayA));
    console.log("setA âˆ© setB :", intersection(arrayA, arrayB));
    console.log("setA U setB :", union(arrayA, arrayB));
}

init();